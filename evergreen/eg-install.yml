- name: Install Evergreen
  become: true
  environment:
    PATH: "{{ansible_env.PATH}}:{{eg_install_path}}/bin"
  shell: >
    cd {{repo_base}}/Evergreen 
    && make STAFF_CLIENT_STAMP_ID={{eg_stamp_id}} install
- name: Create XUL Current Symlink
  file:
    state: link
    src: "{{eg_install_path}}/var/web/xul/{{eg_stamp_id}}"
    dest: "{{eg_install_path}}/var/web/xul/current"
- name: Create XUL Server Symlink
  file:
    state: link
    src: "{{eg_install_path}}/var/web/xul/current/server"
    dest: "{{eg_install_path}}/var/web/xul/server"
- name: Setup opensrf.xml config file
  copy:
    src: "{{eg_install_path}}/conf/opensrf.xml.example"
    dest: "{{eg_install_path}}/conf/opensrf.xml"
    force: no
- name: Setup opensrf_core.xml config file
  copy:
    src: "{{eg_install_path}}/conf/opensrf_core.xml.example"
    dest: "{{eg_install_path}}/conf/opensrf_core.xml"
    force: no
- name: Get URL for dojo
  get_url: url={{dojo_url}} dest=/tmp/dojo-release-{{dojo_version}}.tar.gz
- name: Unarchive dojo tarball
  unarchive:
    src: /tmp/dojo-release-{{dojo_version}}.tar.gz
    dest: /tmp/
- name: Copy dojo source files into place
  copy: src=/tmp/dojo-release-{{dojo_version}}/ dest={{eg_install_path}}/var/web/js/dojo/
- name: Set ownership of {{eg_install_path}} to opensrf
  file: dest={{eg_install_path}} owner=opensrf group=opensrf recurse=yes
- name: Setup .srfsh.xml for opensrf user
  copy: src={{eg_install_path}}/conf/srfsh.xml.example dest=/home/opensrf/.srfsh.xml force=no
- name: Set ownership of .srfsh.xml to opensrf
  file: dest=/home/opensrf/.srfsh.xml owner=opensrf group=opensrf
- name: Copy ldconfig
  copy:
    src: "{{playbook_dir}}/evergreen/evergreen.ld.conf"
    dest: /etc/ld.so.conf.d/evergreen.ld.conf
- name: Run ldconfig
  shell: ldconfig
